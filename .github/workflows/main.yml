on:
  pull_request:
    branches:
      - main
    paths-ignore:
      - '**/README.md'
      - LICENSE
  push:
    branches:
      - main
    tags:
      - 'v*'
    paths-ignore:
      - '**/README.md'
      - LICENSE
jobs:
  linter:
    runs-on: ubuntu-latest
    steps:
      - name: Setup
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Checkout
        uses: actions/checkout@v4

      - name: Linter
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.51.2
          args: --timeout 3m

  tests:
    runs-on: ubuntu-latest
    steps:
      - name: Setup
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Checkout
        uses: actions/checkout@v4

      - name: Dependencies
        run: go mod download

      - name: Preparations
        run:  make prep

      - name: Tests
        run:  make tests

  image:
    runs-on: ubuntu-latest
    needs: [linter, tests]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Metadata
        id: metadata
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Login to registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}
