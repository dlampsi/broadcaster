name: Image
on:
  pull_request:
    branches:
      - main
    paths-ignore:
      - README.md
      - LICENSE
  push:
    branches:
      - main
    tags:
      - 'v*'
    paths-ignore:
      - README.md
      - LICENSE
jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      tags: ${{ steps.metadata.outputs.tags }}
      labels: ${{ steps.metadata.outputs.labels }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Metadata
        id: metadata
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ github.repository }}:${{ github.sha }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: false
          tags: |
            ${{ github.repository }}:${{ github.sha }}
          outputs: type=docker,dest=/tmp/build_image.tar

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: build_image
          path: /tmp/build_image.tar

  tests:
    runs-on: ubuntu-latest
    needs: [build]
    if: ${{ github.event_name == 'pull_request' }}
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: build_image
          path: /tmp

      - name: Load image
        run: |
          docker load --input /tmp/build_image.tar
          docker image ls -a

      - name: Run tests
        run: |
          docker run --rm -it ${{ github.repository }}:${{ github.sha }} /bin/sh -c "echo 'Not implemented yet.'"

  publish_gc:
    runs-on: ubuntu-latest
    needs: [build, tests]
    if: ${{ github.event_name != 'pull_request' }}
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: myimage
          path: /tmp

      - name: Load image
        run: |
          docker load --input /tmp/myimage.tar
          docker image ls -a

      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup GC SDK
        uses: google-github-actions/setup-gcloud@v1

      - name: Auth in GC
        if: github.event_name != 'pull_request'
        id: auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: "${{ secrets.GC_SERVICE_ACCOUNT }}"

      - name: Docker auth
        if: github.event_name != 'pull_request'
        run: |
          gcloud info
          gcloud auth configure-docker ${{ vars.GC_REGION }}-docker.pkg.dev --quiet

      # - name: Build and push
      #   uses: docker/build-push-action@v5
      #   with:
      #     context: .
      #     push: true
      #     tags: ${{ steps.metadata.outputs.tags }}
      #     labels: ${{ steps.metadata.outputs.labels }}
